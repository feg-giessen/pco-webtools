@using PcoBase
@using PcoWeb.Models
@using System.Globalization
@model LivePlanModel
@{
    ViewBag.Title = "Live – " + (Model.StartTime.HasValue ? Model.StartTime.Value.ToString("dd.MM.yyyy – ") : string.Empty) + Model.Item.service_type_name;

    int cols = 4;
}
<div class="live-tag" style="display:none"><span>live</span></div>
<div class="offset-tag" style="display:none"><span>switch</span></div>
<div class="plan-info">
    <h3>@(string.IsNullOrWhiteSpace(Model.Item.plan_title) ? Model.Item.service_type_name : (Model.Item.plan_title + string.Format(" ({0})", Model.Item.service_type_name)))</h3>
@if (!string.IsNullOrWhiteSpace(Model.Item.series_title))
{
    <h4>@Model.Item.series_title</h4>
}
@if (Model.StartTime.HasValue)
{
    <div class="time">@Model.StartTimeLocal.Value.ToString("dddd, dd.MM.yyyy – HH:mm") Uhr</div>
    @*<time datetime="@Model.StartTime.Value"></time>*@
}
</div>
<table class="live">
    <thead>
        <tr><th>#</th><th>Zeit</th><th>Element</th><th>Akteur</th></tr>
    </thead>
    <tbody>
@foreach (LivePlanItemModel item in this.Model.Items)
{
<tr class="type-@item.ItemType akteur-@item.Akteur.ToLower().Split(' ').First()" 
    data-id="@item.Item.id" 
    data-item-length="@item.Item.length"
    data-time-offset="@((item.TimePoint.HasValue && Model.StartTime.HasValue) ? (item.TimePoint.Value - Model.StartTime.Value).TotalSeconds.ToString() : default(string))">
@switch (item.ItemType)
{
    case PlanItemType.Header:
            <td colspan="@cols">@item.Item.title</td>
        break;
    case PlanItemType.Song:
    case PlanItemType.Normal:
    default:
    <td>@item.Item.sequence</td>
    <td class="time"><span class="timepoint">@(item.TimePoint.HasValue ? item.TimePointLocal.Value.ToShortTimeString() : string.Empty)</span><span class="length">@(((item.Time == null && !item.TimePoint.HasValue) || (item.Time != null && item.Time.exclude)) ? string.Empty : item.Item.length_formatted)</span></td>
<td>
    <div class="title">
        <span class="inner-title">@item.Item.title</span>
        @if (item.ItemType == PlanItemType.Song && item.Arrangement != null && item.Arrangement.Parts.Any())
        {
            <span class="action song-toggle"></span>
        }
    </div>
    @if (!string.IsNullOrEmpty(item.Item.description))
    {
        <div class="description">
            @item.Description
        </div>
    }
    @if (!string.IsNullOrEmpty(item.Item.detail))
    {
        <div class="detail">
            @item.Detail
        </div>
    }
    @if (item.ItemType == PlanItemType.Song)
    {
        <div class="song-details">
            <div class="sequence">
                @foreach (var s in item.SongSequence)
                {
                    <div class="sequence-@s.Class">@s.Title</div>
                }
            </div>
            @if (item.Arrangement != null)
            {
                <div class="text">
                    @foreach (var part in item.Arrangement.Parts)
                    {
                        <div class="part">
                            <div class="seq-label sequence-@part.Class">@part.Label</div>
                            <div class="content">
                                @part.Html
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    }
</td>
                <td>@item.Akteur</td>
                    break;
            }
            </tr>
    }
    </tbody>
</table>
@section sidebar
{
<div class="plan-nav">
    <a href="@Url.Action("Live", new { id = Model.Item.prev_plan_id})" class="previous"><span class="icon">Previous</span></a>
    <a href="@Url.Action("Live", new { id = Model.Item.next_plan_id})" class="next"><span class="icon">Next</span></a>
</div>
<div class="plan-clock">
    <h3>Zeit</h3>
    <div class="to-service-clock"></div>
    <div class="current-clock"></div>
    <div class="in-service-clock"></div>
    <h3>Aktionen</h3>
    <ul class="actions">
        <li class="song-texts"><span class="icon"></span>Texte <a class="js-show" href="#">auf</a>/<a class="js-hide" href="#">zu</a></li>
    </ul>
    <h3>Sänger</h3>
    <ul class="singers">
        @foreach (SingerModel person in this.Model.Singers)
        {
            <li>@person.Name (@person.Shortcut)</li>
        }
    </ul>
</div>
}
@section scripts
{
    <script src="~/Scripts/jquery.signalR-2.0.2.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript" src="@Url.Content("~/scripts/LiveApp.js")"></script>
    <script>
        var serviceDate = new Date('@Model.StartTime.Value.ToUniversalTime().ToString("MM/dd/yyyy HH:mm:ss", CultureInfo.InvariantCulture) UTC'); @*// Tue, 1 Jan 2000 00:00:00 GMT*@
        var serviceEnd = new Date('@Model.EndTime.Value.ToUniversalTime().ToString("MM/dd/yyyy HH:mm:ss", CultureInfo.InvariantCulture) UTC'); @*// Tue, 1 Jan 2000 00:00:00 GMT*@

        $(function () {
            liveApp.serviceDate = serviceDate;
            liveApp.serviceEnd = serviceEnd;

            $('.plan-clock .actions .song-texts .js-hide').on('click', function (e) {
                e.preventDefault();
                liveApp.hideSongs();
            });
            $('.plan-clock .actions .song-texts .js-show').on('click', function (e) {
                e.preventDefault();
                liveApp.showSongs();
            });
            setInterval(liveApp.updateTimes, 500);

            var signalr = $.connection.liveHub;
            signalr.client.offset = function (value) {
                liveApp.serviceTimeOffset = value;
            };

            $.connection.hub.start();
            /*.done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub. 
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment. 
                    $('#message').val('').focus();
                });
            });*/
        });
    </script>
}
